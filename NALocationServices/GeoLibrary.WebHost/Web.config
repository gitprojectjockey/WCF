<?xml version="1.0" encoding="utf-8"?>

  <!--For more information on how to configure your ASP.NET application, please visit-->
  <!--https://go.microsoft.com/fwlink/?LinkId=169433-->

<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Warning,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="E:\GitProjectJockey\WCF\NALocationServices\GeoLibrary.WebHost\Web_messages.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
      <add initializeData="E:\GitProjectJockey\WCF\NALocationServices\GeoLibrary.WebHost\Web_tracelog.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>
  <connectionStrings>
    <add name="main" connectionString="Data Source=ERIC-PC\SQLEXPRESS; Initial Catalog=ZipCodeData;integrated security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
    </diagnostics>
    <behaviors>
      <!--NOTE: NOTE: NOTE: - This is  Certificate Authentication and Message Security in WCF-->
      <!--Message Security with a User Name Client-->
      <!--The service is authenticated with an X.509 certificate. The client authenticates using a user name and password.-->
      <!--All application messages between the client and server are signed and encrypted.--> 
      <!--This is not HTTP Over SSL or Transport Security-->
      
      <!--Setting the certificateValidationMode to PeerOrChainTrust means that if the certificate   
      is in the user's Trusted People store, then it is trusted without performing a  
      validation of the certificate's issuer chain. This setting is used here for convenience so that the   
      sample can be run without having to have certificates issued by a certification authority (CA).  
      This setting is less secure than the default, ChainTrust. The security implications of this   
      setting should be carefully considered before using PeerOrChainTrust in production code.-->   
          
      <serviceBehaviors>
        <behavior name="userNameCertificate">
          <serviceMetadata httpGetEnabled="true" />
          <serviceCredentials>
            <clientCertificate>
              <authentication certificateValidationMode="ChainTrust"  />
            </clientCertificate>
            <serviceCertificate findValue="Eric-PC"
                                storeName="TrustedPeople"
                                x509FindType="FindBySubjectName" />

            <userNameAuthentication userNamePasswordValidationMode="Custom"
              customUserNamePasswordValidatorType="GeoLibrary.Services.Security.CustomUserValidator, GeoLibrary.Services" />
          </serviceCredentials>
        </behavior>

        <behavior name="mexBehavior" >
          <serviceMetadata httpGetEnabled="true" />
        </behavior>

        <behavior name="debug">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <bindings>
      <wsHttpBinding>
        <binding name="GeoAdminService.Binding.SecurityMode.Message.Certificate"
          sendTimeout="00:20:00" transactionFlow="true" maxReceivedMessageSize="2097152">
          <readerQuotas maxDepth="32" maxStringContentLength="2147483647"
            maxArrayLength="50000" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession enabled="true" />
          <security mode="Message">
            <message clientCredentialType="UserName" negotiateServiceCredential="false" />
          </security>
        </binding>
        <binding name="GeoService.Binding.SecurityMode.Message" sendTimeout="00:20:00"
          maxReceivedMessageSize="2097152">
          <readerQuotas maxDepth="32" maxStringContentLength="2147483647"
            maxArrayLength="50000" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="Message" />
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="userNameCertificate" name="GeoLibrary.Services.GeoAdminManager">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="GeoAdminService.Binding.SecurityMode.Message.Certificate"
          contract="GeoLibrary.Contracts.IGeoAdminService" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost/NALocationServices/" />
          </baseAddresses>
        </host>
      </service>

      <service name="GeoLibrary.Services.GeoManager" behaviorConfiguration="mexBehavior">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="GeoService.Binding.SecurityMode.Message"
         contract="GeoLibrary.Contracts.IGeoService" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost/NALocationServices/" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <!--Adding Virtual svc files-->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add service="GeoLibrary.Services.GeoManager" relativeAddress="GeoService.svc"/>
        <add service="GeoLibrary.Services.GeoAdminManager" relativeAddress="GeoAdminService.svc"/>
      </serviceActivations>
    </serviceHostingEnvironment>
  </system.serviceModel>


  <!--=============================================================================================================-->

  <system.web>
    <compilation debug="true" targetFramework="4.6.1"/>
    <httpRuntime targetFramework="4.6.1"/>
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs"
        type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701"/>
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb"
        type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+"/>
    </compilers>
  </system.codedom>
</configuration>