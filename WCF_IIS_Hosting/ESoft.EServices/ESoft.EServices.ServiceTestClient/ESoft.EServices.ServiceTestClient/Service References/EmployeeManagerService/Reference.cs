//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ESoft.EServices.ServiceTestClient.EmployeeManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/ESoft.EServices.Library")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessEntityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerFistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerLastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessEntityID {
            get {
                return this.BusinessEntityIDField;
            }
            set {
                if ((this.BusinessEntityIDField.Equals(value) != true)) {
                    this.BusinessEntityIDField = value;
                    this.RaisePropertyChanged("BusinessEntityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerFistName {
            get {
                return this.ManagerFistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerFistNameField, value) != true)) {
                    this.ManagerFistNameField = value;
                    this.RaisePropertyChanged("ManagerFistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerLastName {
            get {
                return this.ManagerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerLastNameField, value) != true)) {
                    this.ManagerLastNameField = value;
                    this.RaisePropertyChanged("ManagerLastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeManagerService.IEmployee")]
    public interface IEmployee {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetEmployeeManagers", ReplyAction="http://tempuri.org/IEmployee/GetEmployeeManagersResponse")]
        ESoft.EServices.ServiceTestClient.EmployeeManagerService.Employee[] GetEmployeeManagers(int businessEntityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetEmployeeManagers", ReplyAction="http://tempuri.org/IEmployee/GetEmployeeManagersResponse")]
        System.Threading.Tasks.Task<ESoft.EServices.ServiceTestClient.EmployeeManagerService.Employee[]> GetEmployeeManagersAsync(int businessEntityID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeChannel : ESoft.EServices.ServiceTestClient.EmployeeManagerService.IEmployee, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeClient : System.ServiceModel.ClientBase<ESoft.EServices.ServiceTestClient.EmployeeManagerService.IEmployee>, ESoft.EServices.ServiceTestClient.EmployeeManagerService.IEmployee {
        
        public EmployeeClient() {
        }
        
        public EmployeeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ESoft.EServices.ServiceTestClient.EmployeeManagerService.Employee[] GetEmployeeManagers(int businessEntityID) {
            return base.Channel.GetEmployeeManagers(businessEntityID);
        }
        
        public System.Threading.Tasks.Task<ESoft.EServices.ServiceTestClient.EmployeeManagerService.Employee[]> GetEmployeeManagersAsync(int businessEntityID) {
            return base.Channel.GetEmployeeManagersAsync(businessEntityID);
        }
    }
}
