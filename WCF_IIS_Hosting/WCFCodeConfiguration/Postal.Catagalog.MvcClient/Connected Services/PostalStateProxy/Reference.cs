//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Postal.Catagalog.MvcClient.PostalStateProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateCodeData", Namespace="http://www.goPostal.com/postalServices")]
    [System.SerializableAttribute()]
    public partial class StateCodeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SSCode {
            get {
                return this.SSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SSCodeField, value) != true)) {
                    this.SSCodeField = value;
                    this.RaisePropertyChanged("SSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.goPostal.com/postalServices", ConfigurationName="PostalStateProxy.IPostalStateService")]
    public interface IPostalStateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.goPostal.com/postalServices/IPostalServiceBase/Ping", ReplyAction="http://www.goPostal.com/postalServices/IPostalServiceBase/PingResponse")]
        string Ping(string echo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.goPostal.com/postalServices/IPostalServiceBase/Ping", ReplyAction="http://www.goPostal.com/postalServices/IPostalServiceBase/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync(string echo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.goPostal.com/postalServices/IPostalStateService/GetStates", ReplyAction="http://www.goPostal.com/postalServices/IPostalStateService/GetStatesResponse")]
        string[] GetStates(bool primaryOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.goPostal.com/postalServices/IPostalStateService/GetStates", ReplyAction="http://www.goPostal.com/postalServices/IPostalStateService/GetStatesResponse")]
        System.Threading.Tasks.Task<string[]> GetStatesAsync(bool primaryOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.goPostal.com/postalServices/IPostalStateService/GetStateCode", ReplyAction="http://www.goPostal.com/postalServices/IPostalStateService/GetStateCodeResponse")]
        Postal.Catagalog.MvcClient.PostalStateProxy.StateCodeData GetStateCode(string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.goPostal.com/postalServices/IPostalStateService/GetStateCode", ReplyAction="http://www.goPostal.com/postalServices/IPostalStateService/GetStateCodeResponse")]
        System.Threading.Tasks.Task<Postal.Catagalog.MvcClient.PostalStateProxy.StateCodeData> GetStateCodeAsync(string state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPostalStateServiceChannel : Postal.Catagalog.MvcClient.PostalStateProxy.IPostalStateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostalStateServiceClient : System.ServiceModel.ClientBase<Postal.Catagalog.MvcClient.PostalStateProxy.IPostalStateService>, Postal.Catagalog.MvcClient.PostalStateProxy.IPostalStateService {
        
        public PostalStateServiceClient() {
        }
        
        public PostalStateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PostalStateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostalStateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostalStateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Ping(string echo) {
            return base.Channel.Ping(echo);
        }
        
        public System.Threading.Tasks.Task<string> PingAsync(string echo) {
            return base.Channel.PingAsync(echo);
        }
        
        public string[] GetStates(bool primaryOnly) {
            return base.Channel.GetStates(primaryOnly);
        }
        
        public System.Threading.Tasks.Task<string[]> GetStatesAsync(bool primaryOnly) {
            return base.Channel.GetStatesAsync(primaryOnly);
        }
        
        public Postal.Catagalog.MvcClient.PostalStateProxy.StateCodeData GetStateCode(string state) {
            return base.Channel.GetStateCode(state);
        }
        
        public System.Threading.Tasks.Task<Postal.Catagalog.MvcClient.PostalStateProxy.StateCodeData> GetStateCodeAsync(string state) {
            return base.Channel.GetStateCodeAsync(state);
        }
    }
}
