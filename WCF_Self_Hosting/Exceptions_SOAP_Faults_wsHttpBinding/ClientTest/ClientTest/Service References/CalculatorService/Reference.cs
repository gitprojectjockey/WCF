//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientTest.CalculatorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ESoft.EServices/CalculatorService", ConfigurationName="CalculatorService.ICalculatorService")]
    public interface ICalculatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ESoft.EServices/CalculatorService/ICalculatorService/Devide", ReplyAction="http://ESoft.EServices/CalculatorService/ICalculatorService/DevideResponse")]
        int Devide(int enumerator, int denominator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ESoft.EServices/CalculatorService/ICalculatorService/Devide", ReplyAction="http://ESoft.EServices/CalculatorService/ICalculatorService/DevideResponse")]
        System.Threading.Tasks.Task<int> DevideAsync(int enumerator, int denominator);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorServiceChannel : ClientTest.CalculatorService.ICalculatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceClient : System.ServiceModel.ClientBase<ClientTest.CalculatorService.ICalculatorService>, ClientTest.CalculatorService.ICalculatorService {
        
        public CalculatorServiceClient() {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Devide(int enumerator, int denominator) {
            return base.Channel.Devide(enumerator, denominator);
        }
        
        public System.Threading.Tasks.Task<int> DevideAsync(int enumerator, int denominator) {
            return base.Channel.DevideAsync(enumerator, denominator);
        }
    }
}
